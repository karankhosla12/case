<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Query Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .container {
            max-width: 400px;
            margin: auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .output, .additional-fields {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Submit Your Query</h2>
        <form id="queryForm">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required><br><br>
            
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required><br><br>
            
            <label for="description">Description:</label><br>
            <textarea id="description" name="description" rows="4" required></textarea><br><br>
            
            <button type="submit">Submit</button>
        </form>

        <div class="output" id="output"></div>
        <div class="additional-fields" id="additionalFields"></div>
    </div>

    <script>
        document.getElementById('queryForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            const description = document.getElementById('description').value;
            
            async function query(data) {
                const response = await fetch(
                    "https://api-inference.huggingface.co/models/MoritzLaurer/mDeBERTa-v3-base-mnli-xnli",
                    {
                        headers: {
                            Authorization: "Bearer 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",
                            "Content-Type": "application/json",
                        },
                        method: "POST",
                        body: JSON.stringify(data),
                    }
                );
                return await response.json();
            }
            
            query({"inputs": description, "parameters": {"candidate_labels": ["Login", "Billing", "inmail", "Ads", "Talent Solutions"]}})
                .then(response => {
                    document.getElementById('output').innerText = JSON.stringify(response, null, 2);
                    const highestLabel = response.labels[response.scores.indexOf(Math.max(...response.scores))];
                    
                    let additionalFieldsHtml = `<label for='category'>Case Category:</label>
                                              <input type='text' id='category' value='${highestLabel}'><br><br>`;
                    
                    if (highestLabel === "Billing") {
                        additionalFieldsHtml += `<label>LinkedIn profile URL:</label><input type='text'><br>
                                                <label>Credit card number:</label><input type='text'><br>
                                                <label>Products billed for:</label><input type='text'><br>
                                                <p>Filling these help us resolve your cases faster</p>`;
                    } else if (highestLabel === "Ads") {
                        additionalFieldsHtml += `<label>Ads account ID:</label><input type='text'><br>
                                                <label>LinkedIn profile URL:</label><input type='text'><br>
                                                <label>Campaign Used:</label><input type='text'><br>
                                                <p>Filling these help us resolve your cases faster</p>`;
                    } else if (highestLabel === "Talent Solutions") {
                        additionalFieldsHtml += `<label>Recruiter ID:</label><input type='text'><br>
                                                <label>LinkedIn profile URL:</label><input type='text'><br>
                                                <label>Project ID:</label><input type='text'><br>
                                                <p>Filling these help us resolve your cases faster</p>`;
                    } else if (highestLabel === "inmail") {
                        additionalFieldsHtml += `<label>LinkedIn profile URL:</label><input type='text'><br>
                                                <label>URL of screenshot of the error:</label><input type='text'><br>
                                                <label>Time of the error:</label><input type='text'><br>
                                                <p>Filling these help us resolve your cases faster</p>`;
                    }
                    
                    document.getElementById('additionalFields').innerHTML = additionalFieldsHtml;
                })
                .catch(error => {
                    document.getElementById('output').innerText = "Error: " + error.message;
                });
        });
    </script>
</body>
</html>
